// <auto-generated />
using SampleOidc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace SampleOidc.Contacts.API.Migrations
{
    [DbContext(typeof(ContactsDbContext))]
    partial class ContactsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SampleOidc.Models.Address", b =>
                {
                    b.Property<string>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("AddedAt");

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("City");

                    b.Property<string>("ContactId")
                        .IsRequired();

                    b.Property<string>("Label");

                    b.Property<string>("State");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<string>("ZipOrPostal");

                    b.HasKey("AddressId");

                    b.HasIndex("ContactId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("SampleOidc.Models.Contact", b =>
                {
                    b.Property<string>("ContactId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("AddedAt");

                    b.Property<string>("Company");

                    b.Property<string>("Designation");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Notes");

                    b.Property<string>("Prefix");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("ContactId");

                    b.HasIndex("UserId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("SampleOidc.Models.Email", b =>
                {
                    b.Property<string>("EmailId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("AddedAt");

                    b.Property<string>("ContactId")
                        .IsRequired();

                    b.Property<string>("Label");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<string>("Value");

                    b.HasKey("EmailId");

                    b.HasIndex("ContactId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("SampleOidc.Models.Phone", b =>
                {
                    b.Property<string>("PhoneId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("AddedAt");

                    b.Property<string>("ContactId")
                        .IsRequired();

                    b.Property<string>("Label");

                    b.Property<DateTimeOffset>("UpdatedAt");

                    b.Property<string>("Value");

                    b.HasKey("PhoneId");

                    b.HasIndex("ContactId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("SampleOidc.Models.Address", b =>
                {
                    b.HasOne("SampleOidc.Models.Contact", "Contact")
                        .WithMany("Addresses")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SampleOidc.Models.Email", b =>
                {
                    b.HasOne("SampleOidc.Models.Contact", "Contact")
                        .WithMany("Emails")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SampleOidc.Models.Phone", b =>
                {
                    b.HasOne("SampleOidc.Models.Contact", "Contact")
                        .WithMany("Phones")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
